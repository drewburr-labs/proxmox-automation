- name: Setup dynamic inventory
  hosts: localhost
  connection: local
  gather_facts: false
  tags:
    - always

  tasks:
    - name: Add VMs to inventory
      ansible.builtin.add_host:
        hostname: "{{ vm_dns_name }}"
        groups: k3s_cluster
        ansible_host: "{{ vm_dns_name }}"
        k3s_control_node: "{{ item.k3s_control_node | default(false) }}"
      vars:
        vm_name: "{{ item.name }}" # Needed to generate vm_dns_name
      loop: "{{ vms }}"
      changed_when: false

- name: Build a cluster with HA control plane
  hosts: k3s_cluster
  tags:
    - build
  vars:
    k3s_become: true
    k3s_etcd_datastore: true
    k3s_install_hard_links: true
    k3s_release_version: v1.28.5+k3s1
    k3s_server:
      disable:
        - servicelb
        - traefik
        - helm-controller
        - metrics-server
  roles:
    - role: xanmanning.k3s

- hosts: k3s_cluster
  gather_facts: false

  vars:
    cluster_name: k3s
    cluster_dns_name: "{{ cluster_name }}.{{ dns_domain }}"

  tasks:
    # - name: Register host IP to K8s DNS name
    #   delegate_to: pihole.drewburr.com
    #   import_role:
    #     name: pihole
    #     tasks_from: dns
    #   vars:
    #     state: present
    #     dns_name: "{{ cluster_dns_name }}"
    #     ip_address: "{{ lookup('community.general.dig', '{{ ansible_host }}')}}"
    #     force: true
    #     ansible_user: "{{ pihole_ssh_user }}"
    #     ansible_ssh_pass: "{{ pihole_ssh_pass }}"
    #   tags:
    #     - dns

    - name: Copy k3s config from primary to local
      run_once: true
      ansible.builtin.slurp:
        src: "{{ k3s_config_path }}"
      register: k3s_config_slurp
      become: true

    - name: Decode slurp result
      run_once: true
      set_fact:
        k3s_config: "{{ k3s_config_slurp.content | b64decode | from_yaml }}"

    - name: Save k3s config with cluster hostname
      run_once: true
      ansible.builtin.copy:
        dest: ./k3s-config.yaml
        content: "{{ config_content | to_nice_yaml(indent=2) }}"
      vars:
        config_content: "{{ k3s_config | combine(config_update) }}"
        config_update:
          clusters:
            - "{{ k3s_config.clusters[0] | combine(cluster_update) }}"
        cluster_update:
          cluster:
            server: https://{{ cluster_dns_name }}:6443
            insecure-skip-tls-verify: true # Ignore invalid cert
        ansible_connection: local # Force copy to local
      delegate_to: localhost
